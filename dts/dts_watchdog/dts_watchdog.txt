看门狗

这里涉及到的寄存器，请查询7688手册1.4版本的69页 http://wiki.widora.cn/media/mt7688datasheetv14.pdf 。

查看datasheet可得寄存器相关数据：
寄存器 10000120 为Watch Dog控制寄存器。		
				16-31位设置分频系数，默认单位为1us，0x3e80=1000，0x03e80000是分频到千分之一，也就是设置为1ms。
				7位为使能位，
				4位为自动加载位。
				
寄存器 10000124 为Watch Dog计时限制寄存器
				0-15位为倒计时数字设置。0x2710=10000，0x1388=5000，0x07d0是2000。单位由上面的寄存器设定如设为1ms，这里填0x2710就表示10s

寄存器 10000100 为RISC全局控制寄存器
				9位为看门狗reset位，将看门狗的计时器值重置为Watch Dog计时限制寄存器中的值比如0x2710，每写入一次1即喂狗一次。

寄存器 10000128 为看门狗计时器。 reg -r 10000128 查看
				分频系数不断递减，减为0则重启系统。喂狗则重置。




首先，enable_watchdog.sh脚本：

#!/bin/sh
reg w 10000120 0x03e80000
reg w 10000124 0x2710
reg w 10000120 0x03e80090      

第一句是设置分频系数，系统默认是1us，也就是1M，此处3e8是分频到千分之一，也就是1ms。0x3e80=1000
第二句是这是看门狗的初始值，7d0是2000。看门狗是个减法计时器，减到0发起系统复位。所以此出意义是2秒。15-0位是看门狗倒计时数字，0x2710=10000也就是10s，0x1388=5000
第三句是启动看门狗,自动加载。7位使能，4位自动加载

上述脚本运行后，如果什么都不做，10秒后系统会重启。所以要想保证系统持续运行，必须有喂狗脚本eat_watchdog.sh，如下：

#!/bin/sh
reg w 10000100 0x0200
reg w 10000120 0x03e80090

//测试未发现该小bug
/********************************/
10000100寄存器的BIT9是控制看门狗的计数器回归到初始值（7d0），这里好像有个小bug，喂狗后，10000120处的寄存器会被清零，很奇怪，故多增加了一句喂狗后重新启动开门狗。
因32+128的版本FLASH模式复位后需要从4Byte地址切换回3Byte地址，看门狗部分不能通过系统内复位，需要利用WDT_RST_N引脚来操作系统复位引脚，我稍后会给出那个的操作步骤。
/*********************************/

vi target/linux/ramips/dts/mt7628an.dtsi
dts中关闭系统看门狗，mt7628an.dtsi里，看门狗部分加一条：
status = "disabled";

注意：使用前如果系统没有添加reg工具，需要编译的时候添加进去 Utilities -> reg 用户空间对寄存器操作命令
测试脚本及文件在目录中